#include <stdio.h>
#include <string.h>

#define MAX_OBJETOS 4
#define MAX_PESO 4

int maximo(int a, int b) {
    return (a > b) ? a : b;
}

int main() {

    char *objetos[MAX_OBJETOS] = {"Guitarra", "Estereo", "Laptop", "iPhone"};
    int pesos[MAX_OBJETOS] = {1, 4, 3, 1};
    int valores[MAX_OBJETOS] = {1500, 3000, 2000, 2000};

    int dp[MAX_OBJETOS + 1][MAX_PESO + 1];


    printf("Llenado paso a paso de la tabla DP:\n\n");
    for (int i = 0; i <= MAX_OBJETOS; i++) {
        for (int w = 0; w <= MAX_PESO; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;
            } else if (pesos[i - 1] <= w) {
                int incluir = valores[i - 1] + dp[i - 1][w - pesos[i - 1]];
                int excluir = dp[i - 1][w];
                dp[i][w] = maximo(incluir, excluir);

                printf("dp[%d][%d] -> max(incluir %s = $%d + dp[%d][%d] = $%d, excluir = $%d) = $%d\n",
                       i, w,
                       objetos[i - 1], valores[i - 1], i - 1, w - pesos[i - 1], dp[i - 1][w - pesos[i - 1]],
                       excluir, dp[i][w]);
            } else {
                dp[i][w] = dp[i - 1][w];
                printf("dp[%d][%d] -> %s no cabe (peso %d > %d), se queda $%d\n",
                       i, w, objetos[i - 1], pesos[i - 1], w, dp[i][w]);
            }
        }
    }


    printf("\nTabla final DP (valores maximos por subproblema):\n\n");

    printf("     ");
    for (int w = 0; w <= MAX_PESO; w++) {
        printf("%4d", w);
    }
    printf("  <-- capacidad\n");

    for (int i = 0; i <= MAX_OBJETOS; i++) {
        if (i == 0)
            printf("  0 ");
        else
            printf("%3d ", i);
        for (int w = 0; w <= MAX_PESO; w++) {
            printf("%4d", dp[i][w]);
        }
        if (i > 0) printf("  <-- %s", objetos[i - 1]);
        printf("\n");
    }


    printf("\nValor maximo: $%d\n", dp[MAX_OBJETOS][MAX_PESO]);


    printf("Objetos seleccionados:\n");
    int w = MAX_PESO;
    for (int i = MAX_OBJETOS; i > 0 && w > 0; i--) {
        if (dp[i][w] != dp[i - 1][w]) {
            printf("- %s (valor: $%d, peso: %dlb)\n",  objetos[i - 1], valores[i - 1], pesos[i - 1]);
            w -= pesos[i - 1];
        }
    }

    return 0;
}
